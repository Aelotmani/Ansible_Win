---
- name: Create a temporary directory for MSBuildTools
  win_file:
    path: "{{ msbuild_dir_tmp }}"
    state: directory

- name: Install MSBuildTools V14 in progress ...
  block:
    - name: Copy MSBuildTools 14 installer from source server to target server (Temporaire will be replaced by Nexus)
      win_copy:
        src: "{{ msbuild_dir_src }}/buildtools_full_v{{ msbuild_major_Version }}.exe"
        dest: "{{ msbuild_dir_tmp }}"
      register: file_copied

    - name: Check if the MSBuildTools V14 installer exists
      win_stat:
          path: "{{ msbuild_dir_tmp }}\\{{ file_copied.original_basename }}"
      register: check_exec_file

    - name: Install MSBuildTools V14 in progress ...
      win_shell: |
        try { 
            Start-Process `"{{ msbuild_dir_tmp }}\\buildtools_full_v{{ msbuild_major_Version }}.exe`" -ArgumentList `
                        `"/quiet`", `
                        `"/full`", `
                        `"/noWeb`" `
                        -Wait
          write-Output "msbuild_installed"
          }catch{
          Write-Error $_.Exception.Message
          break
          }
      when: check_exec_file.stat.exists == True
  when: msbuild_major_Version == 14

- name: Install MSBuildTools V{{ msbuild_major_Version }} in progress ...
  block:
    - name: Copy MSBuildTools 16 installer from source server to target server (Temporaire will be replaced by Nexus)
      win_copy:
        src: "{{ msbuild_dir_src }}/vs_BuildTools_16.exe"
        dest: "{{ msbuild_dir_tmp }}"
      register: file_copied

    - name: Check if the  MSBuildTools V16 file exists
      win_stat:
          path: "{{ msbuild_dir_tmp }}\\{{ file_copied.original_basename }}"
      register: check_exec_file

    - name: Download MSBuildTools {{ msbuild_major_Version }} workload
      win_shell: |
        try { 
          Start-Process `"{{ msbuild_dir_tmp }}\\vs_BuildTools_{{ msbuild_major_Version }}.exe`" -ArgumentList `
                        "--layout `"{{ msbuild_layout }}`"", `
                        "--lang `"{{ msbuild_lang }}`"", `
                        "--add `"{{ msbuild_workload }}`"", `
                        `"--quiet`", `
                        `"--wait`", `
                        `"--includeRecommended`" `
                        -Wait
          write-Output "msbuild_downloaded"
          }catch{
          Write-Error $_.Exception.Message
          break
          }
      when: check_exec_file.stat.exists == True
      register: msbuild_downloaded


    - name: Install MSBuildTools v{{ msbuild_major_Version }}  in progress ...
      win_shell: |
        try { 
          Start-Process `"{{ msbuild_layout }}\\vs_BuildTools_{{ msbuild_major_Version }}.exe`" -ArgumentList `
                        "--add `"{{ msbuild_workload }}`"", `
                        `"--quiet`", `
                        `"--wait`", `
                        `"--noweb`" `
                        -Wait
          write-Output "msbuild_installed"
          }catch{
          Write-Error $_.Exception.Message
          break
          }
      when: msbuild_downloaded.stdout_lines[0] == "msbuild_downloaded"
  when: msbuild_major_Version == 15 or msbuild_major_Version == 16